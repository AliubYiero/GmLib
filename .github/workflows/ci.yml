name: Build and Release

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    build:
        runs-on: ubuntu-latest  # 使用最新的 Ubuntu 运行环境
        
        steps:
            # Step 1: Check out the code
            -   name: Check out the repository
                uses: actions/checkout@v3
            
            # Step 2: Set up Node.js
            -   name: Set up Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: '16'  # 设置 Node.js 版本
            
            # Step 3: Install dependencies
            -   name: Install dependencies
                run: npm install
            
            # Step 4: Run npm build
            -   name: Run npm build
                run: npm run build  # 运行构建命令
            
            # Step 5: Create Release Tag based on package.json version
            -   name: Create Release Tag
                id: create_tag
                run: |
                    # 从 package.json 中读取版本号
                    VERSION=$(jq -r .version package.json)
                    # 获取当前时间，格式为 YYYYMMDDHHMMSS
                    DATE=$(date +'%Y%m%d%H%M%S')
                    # 创建标签，格式为 version-time (例如 1.0.0-20241225120500)
                    TAG_NAME="${VERSION}-${DATE}"
                    echo "Generated tag: $TAG_NAME"
                    
                    # 创建并推送标签
                    git tag $TAG_NAME
                    git push origin $TAG_NAME
                continue-on-error: true  # 如果标签创建失败，仍然继续后面的步骤
            
            # Step 6: Create zip file for release
            -   name: Create zip file for release
                run: |
                    mkdir release
                    cp README.md package.json -r dist release/
                    cd release
                    zip -r release.zip .  # 压缩文件内容
            
            # Step 7: Upload the release asset to GitHub Releases
            -   name: Upload release asset
                uses: softprops/action-gh-release@v1  # 用于将文件上传到 GitHub Releases
                with:
                    files: release/release.zip  # 指定上传的文件
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 自动提供的 token
